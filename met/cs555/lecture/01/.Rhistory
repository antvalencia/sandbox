# One Sample t-test
#
# data:  heightsOfBoys
# t = 40.129, df = 18, p-value < 2.2e-16
# alternative hypothesis: true mean is not equal to 0
# 95 percent confidence interval:
#  63.21792 70.20313
# sample estimates:
#  mean of x
# 66.71053
t.test?
# And the following command returns the confidence intervals
# It simply includes a lower bound and upper bound interval of my data
t.test(heightsOfBoys)$conf.int
# One Sample t-test
#
# data:  heightsOfBoys
# t = 40.129, df = 18, p-value < 2.2e-16
# alternative hypothesis: true mean is not equal to 0
# 95 percent confidence interval:
#  63.21792 70.20313
# sample estimates:
#  mean of x
# 66.71053
?t.test
x <- seq(from = -3, to = 3, length.out = 100)
y <- dnorm(x)
plot(x, y, type=“l”)
plot(x, y, type=“l”)
x <- seq(from = -3, to = 3, length.out = 100)
y <- dnorm(x)
plot(x, y, type=“l”)
x <- seq(from = -3, to = 3, length.out = 100)
y <- dnorm(x)
plot(x, y, type = "l")
xvalues <- x[x>=-1 & x<=1]
yvalues <- y[x>=-1 & x<=1]
region.x <- c(xvalues[1], xvalues, tail(xvalues, 1)) > region.y <- c(0, yvalues, 0)
polygon(region.x, region.y, col="navy")
region.y <- c(0, yvalues, 0)
polygon(region.x, region.y, col="navy")
region.x <- c(xvalues[1], xvalues, tail(xvalues, 1))
region.y <- c(0, yvalues, 0)
polygon(region.x, region.y, col="navy")
