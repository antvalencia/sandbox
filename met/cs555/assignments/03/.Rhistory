q5.sd <- 50
q5.data <- rnorm(10000, mean=q5.mean, sd=q5.sd)
# a) Draw a sample of size 50 from this data.  Show the 95.44% confidence interval using this
#    sample.
q5.size <- 50
q5.sd.sample.means <- pop.sd/sqrt(a5.size)
q5.sd.sample.means <- q5.sd/sqrt(a5.size)
# a) Draw a sample of size 50 from this data.  Show the 95.44% confidence interval using this
#    sample.
q5.size <- 50
q5.sd.sample.means <- q5.sd/sqrt(q5.size)
q5.sd.sample.means
q5.sample.data <- sample(x, size=q5.size)
q5.sample.data
q5.xbar <- mean(q5.sample.data)
q5.xbar
cat("95.44% Conf Interval = ",
q5.xbar - 2*q5.sd.sample.means, "-",
q5.xbar + 2*q5.sd.sample.means, "\n")
q5.sample.data <- sample(q5.data, size=q5.size)
q5.sample.data
q5.xbar <- mean(q5.sample.data)
q5.xbar
cat("95.44% Conf Interval = ",
q5.xbar - 2*q5.sd.sample.means, "-",
q5.xbar + 2*q5.sd.sample.means, "\n")
q5.mean <- 250
q5.sd <- 50
q5.data <- rnorm(10000, mean=q5.mean, sd=q5.sd)
# a) Draw a sample of size 50 from this data.  Show the 95.44% confidence interval using this
#    sample.
q5.size <- 50
q5.sd.sample.means <- q5.sd/sqrt(q5.size)
q5.sample.data <- sample(q5.data, size=q5.size)
q5.xbar <- mean(q5.sample.data)
cat("95.44% Conf Interval = ",
q5.xbar - 2*q5.sd.sample.means, "-",
q5.xbar + 2*q5.sd.sample.means, "\n")
# b) Using the sample from a), compute the confidence intervals and precisions for the
#    confidence levels 75%, 85%, 95% and 99%, respectively.
q5.conf <- c(75, 85, 95, 99)
q5.alpha <- 1 - q5.conf/100   # alpha values for confidence
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), z: %.2f , %.2f",
100*(1-i), i,
qnorm(i/2),
qnorm(1-i/2))
cat(str,"\n")
}
# Q5
# A random variable has normal distribution mean 250 and standard deviation 50.  Show how
# you would do the following with R code.  Set the seed to 123.
set.seed(123)
q5.mean <- 250
q5.sd <- 50
q5.data <- rnorm(10000, mean=q5.mean, sd=q5.sd)
# a) Draw a sample of size 50 from this data.  Show the 95.44% confidence interval using this
#    sample.
q5.size <- 50
q5.sd.sample.means <- q5.sd/sqrt(q5.size)
q5.sample.data <- sample(q5.data, size=q5.size)
q5.xbar <- mean(q5.sample.data)
cat("95.44% Conf Interval = ",
q5.xbar - 2*q5.sd.sample.means, "-",
q5.xbar + 2*q5.sd.sample.means, "\n")
# b) Using the sample from a), compute the confidence intervals and precisions for the
#    confidence levels 75%, 85%, 95% and 99%, respectively.
q5.conf <- c(75, 85, 95, 99)
q5.alpha <- 1 - q5.conf/100   # alpha values for confidence
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), z: %.2f , %.2f",
100*(1-i), i,
qnorm(i/2),
qnorm(1-i/2))
cat(str,"\n")
}
par(mfrow = c(4,1))
for (i in q5.conf) plot.confidence(i)
par(mfrow = c(1,1))
par(mfrow = c(4,1))
plot.confidence <- function (conf = 95) {
alpha <- 1 - conf/100
z <- qnorm(1 - alpha/2)
print(z, digits=4)
f1 <- curve(dnorm(x), from=-3, to=3,
xaxt="n", yaxt="n",
xlab = "z")
title(paste("Confidence =", conf, "%"))
axis(side=1, at=c(-z, 0, z), las=0,
labels=formatC(c(-z, 0, z), digits=3))
polygon(f1$x, f1$y, col="lightblue")
x.1 <- seq(-3, -z, by = 0.05)
y.1 <- dnorm(x.1)
x.1 <- c(x.1, -z, -z)
y.1 <- c(y.1, dnorm(-z), dnorm(-3))
polygon(x.1, y.1, col="white")
x.2 <- seq(3, z, by = -0.05)
y.2 <- dnorm(x.2)
x.2 <- c(x.2, z, z)
y.2 <- c(y.2, dnorm(z), dnorm(3))
polygon(x.2, y.2, col="white")
# lines(c(0,0), c(dnorm(-3), dnorm(0)), lty=2)
text(0, 0.2, 1-alpha)
text(-2.6, 0.2, alpha/2)
text(2.6, 0.2, alpha/2)
return (z)
}
for (i in q5.conf) plot.confidence(i)
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), CI = %.2f - %.2f",
100*(1-i), i,
q5.xbar - qnorm(1-i/2) * q5.sd.sample.means,
q5.xbar + qnorm(1-i/2) * q5.sd.sample.means)
cat(str,"\n")
}
for (i in alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), Precision = %.2f",
100*(1-i), i,
2* qnorm(1-i/2) * sd.sample.means)
cat(str,"\n")
}
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), Precision = %.2f",
100*(1-i), i,
2* qnorm(1-i/2) * sd.sample.means)
cat(str,"\n")
}
str <- sprintf("%2d%% Conf Level (alpha = %.2f), Precision = %.2f",
100*(1-i), i,
2* qnorm(1-i/2) * q5.sd.sample.means)
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), Precision = %.2f",
100*(1-i), i,
2* qnorm(1-i/2) * q5.sd.sample.means)
cat(str,"\n")
}
# b) Using the sample from a), compute the confidence intervals and precisions for the
#    confidence levels 75%, 85%, 95% and 99%, respectively.
q5.conf <- c(75, 85, 95, 99)
q5.alpha <- 1 - q5.conf/100   # alpha values for confidence
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), z: %.2f , %.2f",
100*(1-i), i,
qnorm(i/2),
qnorm(1-i/2))
cat(str,"\n")
}
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), CI = %.2f - %.2f",
100*(1-i), i,
q5.xbar - qnorm(1-i/2) * q5.sd.sample.means,
q5.xbar + qnorm(1-i/2) * q5.sd.sample.means)
cat(str,"\n")
}
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), Precision = %.2f",
100*(1-i), i,
2* qnorm(1-i/2) * q5.sd.sample.means)
cat(str,"\n")
}
# c) For the 90% confidence level, what is the margin of error with the sample used in a)?
q5.conf <- 90
q5.alpha <- 1 - q5.conf/100   # alpha values for confidence
q5.error <- qnorm(1 - q5.alpha/2) * q5.sd.sample.means
# c) For the 90% confidence level, what is the margin of error with the sample used in a)?
q5.conf <- 90
q5.alpha <- 1 - q5.conf/100   # alpha values for confidence
q5.error <- qnorm(1 - q5.alpha/2) * q5.sd.sample.means
q5.error
#    What sample sizes are needed to have the margin of error value of 5, 2, and 1, respectively?
for (q5.error in  c(5.0, 2.0, 1.0)) {
required.size <- (qnorm(1 - a5.alpha/2) * q5.sd/q5.error)^2
required.size <- round(required.size)
str <- sprintf("Error = %.2f, Required sample size = %d",
q5.error, required.size)
cat(str, "\n")
}
#    What sample sizes are needed to have the margin of error value of 5, 2, and 1, respectively?
for (q5.error in  c(5.0, 2.0, 1.0)) {
required.size <- (qnorm(1 - q5.alpha/2) * q5.sd/q5.error)^2
required.size <- round(required.size)
str <- sprintf("Error = %.2f, Required sample size = %d",
q5.error, required.size)
cat(str, "\n")
}
# Q6
# Use the data froam Q5
# a) For the two-tailed test, what is the null hypothesis and alternative
#    hypothesis for the population mean?
q6.mu0 <- q5.mean
q6.sigma <- q5.sd
q6.n <- q5.size
q6.z <- (q5.xbar - q6.mu0) / (q6.sigma / sqrt(q6.n))
q6.z
# Q6
# Use the data froam Q5
# a) For the two-tailed test, what is the null hypothesis and alternative
#    hypothesis for the population mean?
# null hypothesis mu=250; alternative hypothesis mu!=250
q6.mu0 <- q5.mean
q6.sigma <- q5.sd
q6.n <- q5.size
q6.z <- (q5.xbar - q6.mu0) / (q6.sigma / sqrt(q6.n))
q6.z
# b) Using the critical-value approach, and the sample used in Q6, show the
#    results for significance levels 0.1, 0.05 and 0.01 if the null hypothesis
#   should be rejected or not.
q6.alpha.10 <- 0.10
c(qnorm(q6.alpha.10/2), qnorm(1 - q6.alpha.10/2))
q6.alpha.05 <- 0.05
c(qnorm(q6.alpha.05/2), qnorm(1 - aq6.alpha.05/2))
c(qnorm(q6.alpha.05/2), qnorm(1 - q6.alpha.05/2))
q6.alpha.01 <- 0.01
c(qnorm(q6.alpha.01/2), qnorm(1 - q6.alpha.01/2))
set.seed(123)
q5.mean <- 250
q5.sd <- 50
q5.data <- rnorm(10000, mean=q5.mean, sd=q5.sd)
# a) Draw a sample of size 50 from this data.  Show the 95.44% confidence interval using this
#    sample.
q5.size <- 50
q5.sd.sample.means <- q5.sd/sqrt(q5.size)
q5.sample.data <- sample(q5.data, size=q5.size)
q5.xbar <- mean(q5.sample.data)
cat("95.44% Conf Interval = ",
q5.xbar - 2*q5.sd.sample.means, "-",
q5.xbar + 2*q5.sd.sample.means, "\n")
# b) Using the sample from a), compute the confidence intervals and precisions for the
#    confidence levels 75%, 85%, 95% and 99%, respectively.
q5.conf <- c(75, 85, 95, 99)
q5.alpha <- 1 - q5.conf/100   # alpha values for confidence
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), z: %.2f , %.2f",
100*(1-i), i,
qnorm(i/2),
qnorm(1-i/2))
cat(str,"\n")
}
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), CI = %.2f - %.2f",
100*(1-i), i,
q5.xbar - qnorm(1-i/2) * q5.sd.sample.means,
q5.xbar + qnorm(1-i/2) * q5.sd.sample.means)
cat(str,"\n")
}
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), Precision = %.2f",
100*(1-i), i,
2* qnorm(1-i/2) * q5.sd.sample.means)
cat(str,"\n")
}
# c) For the 90% confidence level, what is the margin of error with the sample used in a)?
q5.conf <- 90
q5.alpha <- 1 - q5.conf/100   # alpha values for confidence
q5.error <- qnorm(1 - q5.alpha/2) * q5.sd.sample.means
q5.error
#    What sample sizes are needed to have the margin of error value of 5, 2, and 1, respectively?
for (q5.error in  c(5.0, 2.0, 1.0)) {
required.size <- (qnorm(1 - q5.alpha/2) * q5.sd/q5.error)^2
required.size <- round(required.size)
str <- sprintf("Error = %.2f, Required sample size = %d",
q5.error, required.size)
cat(str, "\n")
}
# Q6
# Use the data froam Q5
# a) For the two-tailed test, what is the null hypothesis and alternative
#    hypothesis for the population mean?
# null hypothesis mu=250; alternative hypothesis mu!=250
q6.mu0 <- q5.mean
q6.sigma <- q5.sd
q6.n <- q5.size
q6.z <- (q5.xbar - q6.mu0) / (q6.sigma / sqrt(q6.n))
q6.z
# 0.3995
# b) Using the critical-value approach, and the sample used in Q6, show the
#    results for significance levels 0.1, 0.05 and 0.01 if the null hypothesis
#   should be rejected or not.
q6.alpha.10 <- 0.10
c(qnorm(q6.alpha.10/2), qnorm(1 - q6.alpha.10/2))
# -1.645  1.645  ==> null hypothesis is not rejected
q6.alpha.05 <- 0.05
c(qnorm(q6.alpha.05/2), qnorm(1 - q6.alpha.05/2))
# -1.96  1.96  ==> null hypothesis is not rejected
q6.alpha.01 <- 0.01
c(qnorm(q6.alpha.01/2), qnorm(1 - q6.alpha.01/2))
# -2.576  2.576  ==> null hypothesis is not rejected
set.seed(123)
q5.mean <- 250
q5.sd <- 50
q5.data <- rnorm(10000, mean=q5.mean, sd=q5.sd)
# a) Draw a sample of size 50 from this data.  Show the 95.44% confidence interval using this
#    sample.
q5.size <- 50
q5.sd.sample.means <- q5.sd/sqrt(q5.size)
q5.sample.data <- sample(q5.data, size=q5.size)
q5.xbar <- mean(q5.sample.data)
cat("95.44% Conf Interval = ",
q5.xbar - 2*q5.sd.sample.means, "-",
q5.xbar + 2*q5.sd.sample.means, "\n")
# b) Using the sample from a), compute the confidence intervals and precisions for the
#    confidence levels 75%, 85%, 95% and 99%, respectively.
q5.conf <- c(75, 85, 95, 99)
q5.alpha <- 1 - q5.conf/100   # alpha values for confidence
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), z: %.2f , %.2f",
100*(1-i), i,
qnorm(i/2),
qnorm(1-i/2))
cat(str,"\n")
}
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), CI = %.2f - %.2f",
100*(1-i), i,
q5.xbar - qnorm(1-i/2) * q5.sd.sample.means,
q5.xbar + qnorm(1-i/2) * q5.sd.sample.means)
cat(str,"\n")
}
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), Precision = %.2f",
100*(1-i), i,
2* qnorm(1-i/2) * q5.sd.sample.means)
cat(str,"\n")
}
# c) For the 90% confidence level, what is the margin of error with the sample used in a)?
q5.conf <- 90
q5.alpha <- 1 - q5.conf/100   # alpha values for confidence
q5.error <- qnorm(1 - q5.alpha/2) * q5.sd.sample.means
q5.error
#    What sample sizes are needed to have the margin of error value of 5, 2, and 1, respectively?
for (q5.error in  c(5.0, 2.0, 1.0)) {
required.size <- (qnorm(1 - q5.alpha/2) * q5.sd/q5.error)^2
required.size <- round(required.size)
str <- sprintf("Error = %.2f, Required sample size = %d",
q5.error, required.size)
cat(str, "\n")
}
# Q6
# Use the data froam Q5
# a) For the two-tailed test, what is the null hypothesis and alternative
#    hypothesis for the population mean?
# null hypothesis mu=250; alternative hypothesis mu!=250
q6.mu0 <- q5.mean
q6.sigma <- q5.sd
q6.n <- q5.size
q6.z <- (q5.xbar - q6.mu0) / (q6.sigma / sqrt(q6.n))
q6.z
# 0.3995
# b) Using the critical-value approach, and the sample used in Q6, show the
#    results for significance levels 0.1, 0.05 and 0.01 if the null hypothesis
#   should be rejected or not.
q6.alpha.10 <- 0.10
c(qnorm(q6.alpha.10/2), qnorm(1 - q6.alpha.10/2))
# -1.645  1.645  ==> null hypothesis is not rejected
q6.alpha.05 <- 0.05
c(qnorm(q6.alpha.05/2), qnorm(1 - q6.alpha.05/2))
# -1.96  1.96  ==> null hypothesis is not rejected
q6.alpha.01 <- 0.01
c(qnorm(q6.alpha.01/2), qnorm(1 - q6.alpha.01/2))
# -2.576  2.576  ==> null hypothesis is not rejected
set.seed(123)
q5.mean <- 250
q5.sd <- 50
q5.data <- rnorm(10000, mean=q5.mean, sd=q5.sd)
# a) Draw a sample of size 50 from this data.  Show the 95.44% confidence interval using this
#    sample.
q5.size <- 50
q5.sd.sample.means <- q5.sd/sqrt(q5.size)
q5.sample.data <- sample(q5.data, size=q5.size)
q5.xbar <- mean(q5.sample.data)
cat("95.44% Conf Interval = ",
q5.xbar - 2*q5.sd.sample.means, "-",
q5.xbar + 2*q5.sd.sample.means, "\n")
# b) Using the sample from a), compute the confidence intervals and precisions for the
#    confidence levels 75%, 85%, 95% and 99%, respectively.
q5.conf <- c(75, 85, 95, 99)
q5.alpha <- 1 - q5.conf/100   # alpha values for confidence
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), z: %.2f , %.2f",
100*(1-i), i,
qnorm(i/2),
qnorm(1-i/2))
cat(str,"\n")
}
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), CI = %.2f - %.2f",
100*(1-i), i,
q5.xbar - qnorm(1-i/2) * q5.sd.sample.means,
q5.xbar + qnorm(1-i/2) * q5.sd.sample.means)
cat(str,"\n")
}
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), Precision = %.2f",
100*(1-i), i,
2* qnorm(1-i/2) * q5.sd.sample.means)
cat(str,"\n")
}
# c) For the 90% confidence level, what is the margin of error with the sample used in a)?
q5.conf <- 90
q5.alpha <- 1 - q5.conf/100   # alpha values for confidence
q5.error <- qnorm(1 - q5.alpha/2) * q5.sd.sample.means
q5.error
#    What sample sizes are needed to have the margin of error value of 5, 2, and 1, respectively?
for (q5.error in  c(5.0, 2.0, 1.0)) {
required.size <- (qnorm(1 - q5.alpha/2) * q5.sd/q5.error)^2
required.size <- round(required.size)
str <- sprintf("Error = %.2f, Required sample size = %d",
q5.error, required.size)
cat(str, "\n")
}
# Q6
# Use the data froam Q5
# a) For the two-tailed test, what is the null hypothesis and alternative
#    hypothesis for the population mean?
# null hypothesis mu=250; alternative hypothesis mu!=250
q6.mu0 <- q5.mean
q6.sigma <- q5.sd
q6.n <- q5.size
q6.z <- (q5.xbar - q6.mu0) / (q6.sigma / sqrt(q6.n))
q6.z
# 0.3995
# b) Using the critical-value approach, and the sample used in Q6, show the
#    results for significance levels 0.1, 0.05 and 0.01 if the null hypothesis
#   should be rejected or not.
q6.alpha.10 <- 0.10
c(qnorm(q6.alpha.10/2), qnorm(1 - q6.alpha.10/2))
# -1.645  1.645  ==> null hypothesis is not rejected
q6.alpha.05 <- 0.05
c(qnorm(q6.alpha.05/2), qnorm(1 - q6.alpha.05/2))
# -1.96  1.96  ==> null hypothesis is not rejected
q6.alpha.01 <- 0.01
c(qnorm(q6.alpha.01/2), qnorm(1 - q6.alpha.01/2))
# -2.576  2.576  ==> null hypothesis is not rejected
# Q2 (mods 2 & 3)
# Consider a class of students with 6 boys and 4 girls.  Setup the experiment for selecting 5
# unique students for representing the class as one group at the science fair.  Add the probability
# space for this experiment.  Add the random variable for the number of boys.  Show the marginal
# distribution for this random variable.  Add the random variable for the number of girls.  Show the
# marginal distribution for this random variable.  Provide the R code for all the above.
q2.boys <- 6
q2.girls <- 4
q2.l <- rep(c("B", "G"), times=c(q2.boys,q2.))
q2.l <- rep(c("B", "G"), times=c(q2.boys,q2.girls))
q2.m <- urnsamples(q2.l, size = q2.students, ordered = TRUE)
q2.students <- 5
q2.m <- urnsamples(q2.l, size = q2.students, ordered = TRUE)
q2.s <- probspace(q2.m)
head(q2.s, n=5)
Prob(q2.s, isrep(q2.s, "G", 3))
Prob(q2.s, isrep(q2.s, "G", 0))
Prob(q2.s, isrep(q2.s, "G", 1))
Prob(q2.s, isrep(q2.s, "G", 2))
Prob(q2.s, isrep(q2.s, "G", 3))
Prob(q2.s, isrep(q2.s, "G", 4))
Prob(q2.s, isrep(q2.s, "G", 5))
# Add the probability space for this experiment.
q2.s <- probspace(q2.m)
# Add the random variable for the number of boys.
countBoys <- function(x) { return (sum(x=="B")) }
# Add the random variable for the number of boys.
countBoys <- function(x) { return (sum(x=="B")) }
q2.b.s <- addrv(q2.s, FUN=countBoys, name="COUNT.B")
# Show the marginal distribution for this random variable.
marginal(q2.b.s, vars="COUNT.B")
# Add the random variable for the number of girls.
countGirls <- function(x) { return (sum(x=="G")) }
q2.g.s <- addrv(q2.s, FUN=countGirls, name="COUNT.G")
# Show the marginal distribution for this random variable.
marginal(q2.g.s, vars="COUNT.G")
1-pnorm((7-5)/(3/sqrt(10)), mean=5, sd=3)
1-pnorm((7-5)/(3/sqrt(10)))
data <- c(8,4,10,4,14,26)
summary(data)
summary(data)
pnorm(273, mean=266, sd=5)
1-pnorm(273, mean=266, sd=5)
(273-266)/5
pnorm(261, mean=266, sd=5)
pnorm(271, mean=266, sd=5)
1-pnorm(271, mean=266, sd=5)
1-pnorm(261, mean=266, sd=5)-(1-pnorm(271, mean=266, sd=5))
1-pnorm(60, mean=64, sd=2)-(1-pnorm(68, mean=64, sd=2))
pnorm(2.00, mean=2.30, sd=0.20)
library(plyr)
# Question 1: read data
setwd("/Users/anthony.valencia/met/cs555/assignments/03/")
fish <- read.csv("data.csv")
fish <- rename(fish, c("Number.of.meals.with.fish"="meals.w.fish", "Total.Mercury.in.mg.g"="total.hg"))
# Question 2: scatter & describe
plot(
fish$meals.w.fish,
fish$total.hg,
main="Meals w/fish vs Hg (mg/g)",
xlab="meals w/fish",
ylab="Hg (mg/g)",
cex=0.2
)
cor(
fish$meals.w.fish,
fish$total.hg
)
# correlation value 0.6991094 suggests a reasonably strong positive correlation.
cor.test(
fish$meals.w.fish,
fish$total.hg,
alternative='two.sided'
)
lm.result <- lm(fish$total.hg~fish$meals.w.fish)
abline(lm.result, lty=1, lwd=3, col="blue")
# Question 6: ANOVA, R squared, 90% confidence interval
qf(0.9,df1=1, df2=98)
anova(lm.result)
