q6.n <- q5.size
q6.z <- (q5.xbar - q6.mu0) / (q6.sigma / sqrt(q6.n))
q6.z
# b) Using the critical-value approach, and the sample used in Q6, show the
#    results for significance levels 0.1, 0.05 and 0.01 if the null hypothesis
#   should be rejected or not.
q6.alpha.10 <- 0.10
c(qnorm(q6.alpha.10/2), qnorm(1 - q6.alpha.10/2))
q6.alpha.05 <- 0.05
c(qnorm(q6.alpha.05/2), qnorm(1 - aq6.alpha.05/2))
c(qnorm(q6.alpha.05/2), qnorm(1 - q6.alpha.05/2))
q6.alpha.01 <- 0.01
c(qnorm(q6.alpha.01/2), qnorm(1 - q6.alpha.01/2))
set.seed(123)
q5.mean <- 250
q5.sd <- 50
q5.data <- rnorm(10000, mean=q5.mean, sd=q5.sd)
# a) Draw a sample of size 50 from this data.  Show the 95.44% confidence interval using this
#    sample.
q5.size <- 50
q5.sd.sample.means <- q5.sd/sqrt(q5.size)
q5.sample.data <- sample(q5.data, size=q5.size)
q5.xbar <- mean(q5.sample.data)
cat("95.44% Conf Interval = ",
q5.xbar - 2*q5.sd.sample.means, "-",
q5.xbar + 2*q5.sd.sample.means, "\n")
# b) Using the sample from a), compute the confidence intervals and precisions for the
#    confidence levels 75%, 85%, 95% and 99%, respectively.
q5.conf <- c(75, 85, 95, 99)
q5.alpha <- 1 - q5.conf/100   # alpha values for confidence
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), z: %.2f , %.2f",
100*(1-i), i,
qnorm(i/2),
qnorm(1-i/2))
cat(str,"\n")
}
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), CI = %.2f - %.2f",
100*(1-i), i,
q5.xbar - qnorm(1-i/2) * q5.sd.sample.means,
q5.xbar + qnorm(1-i/2) * q5.sd.sample.means)
cat(str,"\n")
}
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), Precision = %.2f",
100*(1-i), i,
2* qnorm(1-i/2) * q5.sd.sample.means)
cat(str,"\n")
}
# c) For the 90% confidence level, what is the margin of error with the sample used in a)?
q5.conf <- 90
q5.alpha <- 1 - q5.conf/100   # alpha values for confidence
q5.error <- qnorm(1 - q5.alpha/2) * q5.sd.sample.means
q5.error
#    What sample sizes are needed to have the margin of error value of 5, 2, and 1, respectively?
for (q5.error in  c(5.0, 2.0, 1.0)) {
required.size <- (qnorm(1 - q5.alpha/2) * q5.sd/q5.error)^2
required.size <- round(required.size)
str <- sprintf("Error = %.2f, Required sample size = %d",
q5.error, required.size)
cat(str, "\n")
}
# Q6
# Use the data froam Q5
# a) For the two-tailed test, what is the null hypothesis and alternative
#    hypothesis for the population mean?
# null hypothesis mu=250; alternative hypothesis mu!=250
q6.mu0 <- q5.mean
q6.sigma <- q5.sd
q6.n <- q5.size
q6.z <- (q5.xbar - q6.mu0) / (q6.sigma / sqrt(q6.n))
q6.z
# 0.3995
# b) Using the critical-value approach, and the sample used in Q6, show the
#    results for significance levels 0.1, 0.05 and 0.01 if the null hypothesis
#   should be rejected or not.
q6.alpha.10 <- 0.10
c(qnorm(q6.alpha.10/2), qnorm(1 - q6.alpha.10/2))
# -1.645  1.645  ==> null hypothesis is not rejected
q6.alpha.05 <- 0.05
c(qnorm(q6.alpha.05/2), qnorm(1 - q6.alpha.05/2))
# -1.96  1.96  ==> null hypothesis is not rejected
q6.alpha.01 <- 0.01
c(qnorm(q6.alpha.01/2), qnorm(1 - q6.alpha.01/2))
# -2.576  2.576  ==> null hypothesis is not rejected
set.seed(123)
q5.mean <- 250
q5.sd <- 50
q5.data <- rnorm(10000, mean=q5.mean, sd=q5.sd)
# a) Draw a sample of size 50 from this data.  Show the 95.44% confidence interval using this
#    sample.
q5.size <- 50
q5.sd.sample.means <- q5.sd/sqrt(q5.size)
q5.sample.data <- sample(q5.data, size=q5.size)
q5.xbar <- mean(q5.sample.data)
cat("95.44% Conf Interval = ",
q5.xbar - 2*q5.sd.sample.means, "-",
q5.xbar + 2*q5.sd.sample.means, "\n")
# b) Using the sample from a), compute the confidence intervals and precisions for the
#    confidence levels 75%, 85%, 95% and 99%, respectively.
q5.conf <- c(75, 85, 95, 99)
q5.alpha <- 1 - q5.conf/100   # alpha values for confidence
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), z: %.2f , %.2f",
100*(1-i), i,
qnorm(i/2),
qnorm(1-i/2))
cat(str,"\n")
}
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), CI = %.2f - %.2f",
100*(1-i), i,
q5.xbar - qnorm(1-i/2) * q5.sd.sample.means,
q5.xbar + qnorm(1-i/2) * q5.sd.sample.means)
cat(str,"\n")
}
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), Precision = %.2f",
100*(1-i), i,
2* qnorm(1-i/2) * q5.sd.sample.means)
cat(str,"\n")
}
# c) For the 90% confidence level, what is the margin of error with the sample used in a)?
q5.conf <- 90
q5.alpha <- 1 - q5.conf/100   # alpha values for confidence
q5.error <- qnorm(1 - q5.alpha/2) * q5.sd.sample.means
q5.error
#    What sample sizes are needed to have the margin of error value of 5, 2, and 1, respectively?
for (q5.error in  c(5.0, 2.0, 1.0)) {
required.size <- (qnorm(1 - q5.alpha/2) * q5.sd/q5.error)^2
required.size <- round(required.size)
str <- sprintf("Error = %.2f, Required sample size = %d",
q5.error, required.size)
cat(str, "\n")
}
# Q6
# Use the data froam Q5
# a) For the two-tailed test, what is the null hypothesis and alternative
#    hypothesis for the population mean?
# null hypothesis mu=250; alternative hypothesis mu!=250
q6.mu0 <- q5.mean
q6.sigma <- q5.sd
q6.n <- q5.size
q6.z <- (q5.xbar - q6.mu0) / (q6.sigma / sqrt(q6.n))
q6.z
# 0.3995
# b) Using the critical-value approach, and the sample used in Q6, show the
#    results for significance levels 0.1, 0.05 and 0.01 if the null hypothesis
#   should be rejected or not.
q6.alpha.10 <- 0.10
c(qnorm(q6.alpha.10/2), qnorm(1 - q6.alpha.10/2))
# -1.645  1.645  ==> null hypothesis is not rejected
q6.alpha.05 <- 0.05
c(qnorm(q6.alpha.05/2), qnorm(1 - q6.alpha.05/2))
# -1.96  1.96  ==> null hypothesis is not rejected
q6.alpha.01 <- 0.01
c(qnorm(q6.alpha.01/2), qnorm(1 - q6.alpha.01/2))
# -2.576  2.576  ==> null hypothesis is not rejected
set.seed(123)
q5.mean <- 250
q5.sd <- 50
q5.data <- rnorm(10000, mean=q5.mean, sd=q5.sd)
# a) Draw a sample of size 50 from this data.  Show the 95.44% confidence interval using this
#    sample.
q5.size <- 50
q5.sd.sample.means <- q5.sd/sqrt(q5.size)
q5.sample.data <- sample(q5.data, size=q5.size)
q5.xbar <- mean(q5.sample.data)
cat("95.44% Conf Interval = ",
q5.xbar - 2*q5.sd.sample.means, "-",
q5.xbar + 2*q5.sd.sample.means, "\n")
# b) Using the sample from a), compute the confidence intervals and precisions for the
#    confidence levels 75%, 85%, 95% and 99%, respectively.
q5.conf <- c(75, 85, 95, 99)
q5.alpha <- 1 - q5.conf/100   # alpha values for confidence
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), z: %.2f , %.2f",
100*(1-i), i,
qnorm(i/2),
qnorm(1-i/2))
cat(str,"\n")
}
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), CI = %.2f - %.2f",
100*(1-i), i,
q5.xbar - qnorm(1-i/2) * q5.sd.sample.means,
q5.xbar + qnorm(1-i/2) * q5.sd.sample.means)
cat(str,"\n")
}
for (i in q5.alpha) {
str <- sprintf("%2d%% Conf Level (alpha = %.2f), Precision = %.2f",
100*(1-i), i,
2* qnorm(1-i/2) * q5.sd.sample.means)
cat(str,"\n")
}
# c) For the 90% confidence level, what is the margin of error with the sample used in a)?
q5.conf <- 90
q5.alpha <- 1 - q5.conf/100   # alpha values for confidence
q5.error <- qnorm(1 - q5.alpha/2) * q5.sd.sample.means
q5.error
#    What sample sizes are needed to have the margin of error value of 5, 2, and 1, respectively?
for (q5.error in  c(5.0, 2.0, 1.0)) {
required.size <- (qnorm(1 - q5.alpha/2) * q5.sd/q5.error)^2
required.size <- round(required.size)
str <- sprintf("Error = %.2f, Required sample size = %d",
q5.error, required.size)
cat(str, "\n")
}
# Q6
# Use the data froam Q5
# a) For the two-tailed test, what is the null hypothesis and alternative
#    hypothesis for the population mean?
# null hypothesis mu=250; alternative hypothesis mu!=250
q6.mu0 <- q5.mean
q6.sigma <- q5.sd
q6.n <- q5.size
q6.z <- (q5.xbar - q6.mu0) / (q6.sigma / sqrt(q6.n))
q6.z
# 0.3995
# b) Using the critical-value approach, and the sample used in Q6, show the
#    results for significance levels 0.1, 0.05 and 0.01 if the null hypothesis
#   should be rejected or not.
q6.alpha.10 <- 0.10
c(qnorm(q6.alpha.10/2), qnorm(1 - q6.alpha.10/2))
# -1.645  1.645  ==> null hypothesis is not rejected
q6.alpha.05 <- 0.05
c(qnorm(q6.alpha.05/2), qnorm(1 - q6.alpha.05/2))
# -1.96  1.96  ==> null hypothesis is not rejected
q6.alpha.01 <- 0.01
c(qnorm(q6.alpha.01/2), qnorm(1 - q6.alpha.01/2))
# -2.576  2.576  ==> null hypothesis is not rejected
# Q2 (mods 2 & 3)
# Consider a class of students with 6 boys and 4 girls.  Setup the experiment for selecting 5
# unique students for representing the class as one group at the science fair.  Add the probability
# space for this experiment.  Add the random variable for the number of boys.  Show the marginal
# distribution for this random variable.  Add the random variable for the number of girls.  Show the
# marginal distribution for this random variable.  Provide the R code for all the above.
q2.boys <- 6
q2.girls <- 4
q2.l <- rep(c("B", "G"), times=c(q2.boys,q2.))
q2.l <- rep(c("B", "G"), times=c(q2.boys,q2.girls))
q2.m <- urnsamples(q2.l, size = q2.students, ordered = TRUE)
q2.students <- 5
q2.m <- urnsamples(q2.l, size = q2.students, ordered = TRUE)
q2.s <- probspace(q2.m)
head(q2.s, n=5)
Prob(q2.s, isrep(q2.s, "G", 3))
Prob(q2.s, isrep(q2.s, "G", 0))
Prob(q2.s, isrep(q2.s, "G", 1))
Prob(q2.s, isrep(q2.s, "G", 2))
Prob(q2.s, isrep(q2.s, "G", 3))
Prob(q2.s, isrep(q2.s, "G", 4))
Prob(q2.s, isrep(q2.s, "G", 5))
# Add the probability space for this experiment.
q2.s <- probspace(q2.m)
# Add the random variable for the number of boys.
countBoys <- function(x) { return (sum(x=="B")) }
# Add the random variable for the number of boys.
countBoys <- function(x) { return (sum(x=="B")) }
q2.b.s <- addrv(q2.s, FUN=countBoys, name="COUNT.B")
# Show the marginal distribution for this random variable.
marginal(q2.b.s, vars="COUNT.B")
# Add the random variable for the number of girls.
countGirls <- function(x) { return (sum(x=="G")) }
q2.g.s <- addrv(q2.s, FUN=countGirls, name="COUNT.G")
# Show the marginal distribution for this random variable.
marginal(q2.g.s, vars="COUNT.G")
1-pnorm((7-5)/(3/sqrt(10)), mean=5, sd=3)
1-pnorm((7-5)/(3/sqrt(10)))
data <- c(8,4,10,4,14,26)
summary(data)
summary(data)
pnorm(273, mean=266, sd=5)
1-pnorm(273, mean=266, sd=5)
(273-266)/5
pnorm(261, mean=266, sd=5)
pnorm(271, mean=266, sd=5)
1-pnorm(271, mean=266, sd=5)
1-pnorm(261, mean=266, sd=5)-(1-pnorm(271, mean=266, sd=5))
1-pnorm(60, mean=64, sd=2)-(1-pnorm(68, mean=64, sd=2))
pnorm(2.00, mean=2.30, sd=0.20)
sample.mean.participants
# Question 1
setwd("/Users/anthony.valencia/met/cs555/assignments/02/")
participants <- read.csv("participants")
participants <- participants$CalorieIntakeForparticipants
non.participants <- read.csv("non-participants")
non.participants <- non.participants$CalorieIntakeForNon.participants
max.len = max(length(participants), length(non.participants))
participants = c(participants, rep(NA, max.len - length(participants)))
non.participants = c(non.participants, rep(NA, max.len - length(non.participants)))
df <- data.frame(participants, non.participants)
names(df) <- c("participants", "non.participants")
boundaries <- seq(min(df$participants)-10, max(df$participants)+10, by=20)
h <- hist(df$participants, breaks=boundaries, plot=FALSE)
plot(
h,
xaxt = "n",
xlab = "calorie intake",
ylab = "frequency",
main = "calorie intake for participants",
col = "cadetblue"
)
axis(1, h$mids, labels=seq(floor(min(df$participants)), ceiling(max(df$participants)), by=20), tick=FALSE, padj=-1.5)
boundaries <- seq(min(df$non.participants)-10, max(df$non.participants)+10, by=20)
h <- hist(df$non.participants, breaks=boundaries, plot=FALSE)
plot(
h,
xaxt = "n",
xlab = "calorie intake",
ylab = "frequency",
main = "calorie intake for non-participants",
col = "cadetblue"
)
axis(1, h$mids, labels=seq(floor(min(df$non.participants)), ceiling(max(df$non.participants)), by=20), tick=FALSE, padj=-1.5)
# Q2
#     Does the mean calorie consumption for those who participated in the meal preparation differ from 425?
#     Formally test at the alpha=0.05 level using the 5 steps outlined in the module.
participants <- df$participants[!is.na(df$participants)]
sample.mean.participants <- mean(participants)
sample.sd.participants <- sd(participants)
n.participants <- length(participants)
t <- (sample.mean - 425)/(sample.sd/sqrt(n))
# critical value for df = 25 - 1 = 24 and p = 0.05 is 1.711
# reject H0 if |t|≥1.711
# |t| = 0.3027212, so calorie consumption does not differ
# Q3
#     Calculate a 90% confidence interval for the mean calorie intake for participants in the meal preparation
#     Interpret the confidence interval.
sample.mean.participants + (1.711 * (sample.sd.participants/sqrt(n.participants))) # 467.5706
sample.mean.participants - (1.711 * (sample.sd.participants/sqrt(n.participants))) # 395.2286
sample.mean.participants
# Question 1
setwd("/Users/anthony.valencia/met/cs555/assignments/02/")
participants <- read.csv("participants")
participants <- participants$CalorieIntakeForparticipants
non.participants <- read.csv("non-participants")
non.participants <- non.participants$CalorieIntakeForNon.participants
max.len = max(length(participants), length(non.participants))
participants = c(participants, rep(NA, max.len - length(participants)))
non.participants = c(non.participants, rep(NA, max.len - length(non.participants)))
df <- data.frame(participants, non.participants)
names(df) <- c("participants", "non.participants")
boundaries <- seq(min(df$participants)-10, max(df$participants)+10, by=20)
h <- hist(df$participants, breaks=boundaries, plot=FALSE)
plot(
h,
xaxt = "n",
xlab = "calorie intake",
ylab = "frequency",
main = "calorie intake for participants",
col = "cadetblue"
)
axis(1, h$mids, labels=seq(floor(min(df$participants)), ceiling(max(df$participants)), by=20), tick=FALSE, padj=-1.5)
boundaries <- seq(min(df$non.participants)-10, max(df$non.participants)+10, by=20)
h <- hist(df$non.participants, breaks=boundaries, plot=FALSE)
plot(
h,
xaxt = "n",
xlab = "calorie intake",
ylab = "frequency",
main = "calorie intake for non-participants",
col = "cadetblue"
)
axis(1, h$mids, labels=seq(floor(min(df$non.participants)), ceiling(max(df$non.participants)), by=20), tick=FALSE, padj=-1.5)
min(df$non.participants)-10
non.participants <- df$non.participants[!is.na(df$non.participants)]
boundaries <- seq(min(non.participants)-10, max(non.participants)+10, by=20)
h <- hist(non.participants, breaks=boundaries, plot=FALSE)
plot(
h,
xaxt = "n",
xlab = "calorie intake",
ylab = "frequency",
main = "calorie intake for non-participants",
col = "cadetblue"
)
axis(1, h$mids, labels=seq(floor(min(non.participants)), ceiling(max(non.participants)), by=20), tick=FALSE, padj=-1.5)
# Question 1
setwd("/Users/anthony.valencia/met/cs555/assignments/02/")
participants <- read.csv("participants")
participants <- participants$CalorieIntakeForparticipants
non.participants <- read.csv("non-participants")
non.participants <- non.participants$CalorieIntakeForNon.participants
max.len = max(length(participants), length(non.participants))
participants = c(participants, rep(NA, max.len - length(participants)))
non.participants = c(non.participants, rep(NA, max.len - length(non.participants)))
df <- data.frame(participants, non.participants)
names(df) <- c("participants", "non.participants")
participants <- df$participants[!is.na(df$participants)]
boundaries <- seq(min(participants)-10, max(participants)+10, by=20)
h <- hist(participants, breaks=boundaries, plot=FALSE)
plot(
h,
xaxt = "n",
xlab = "calorie intake",
ylab = "frequency",
main = "calorie intake for participants",
col = "cadetblue"
)
axis(1, h$mids, labels=seq(floor(min(participants)), ceiling(max(participants)), by=20), tick=FALSE, padj=-1.5)
participants <- df$participants[!is.na(df$participants)]
boundaries <- seq(min(participants)-10, max(participants)+10, by=10)
h <- hist(participants, breaks=boundaries, plot=FALSE)
plot(
h,
xaxt = "n",
xlab = "calorie intake",
ylab = "frequency",
main = "calorie intake for participants",
col = "cadetblue"
)
axis(1, h$mids, labels=seq(floor(min(participants)), ceiling(max(participants)), by=20), tick=FALSE, padj=-1.5)
participants <- df$participants[!is.na(df$participants)]
boundaries <- seq(min(participants)-10, max(participants)+10, by=10)
h <- hist(participants, breaks=boundaries, plot=FALSE)
plot(
h,
xaxt = "n",
xlab = "calorie intake",
ylab = "frequency",
main = "calorie intake for participants",
col = "cadetblue"
)
axis(1, h$mids, labels=seq(floor(min(participants)), ceiling(max(participants)), by=10), tick=FALSE, padj=-1.5)
# Question 1
setwd("/Users/anthony.valencia/met/cs555/assignments/02/")
participants <- read.csv("participants")
participants <- participants$CalorieIntakeForparticipants
non.participants <- read.csv("non-participants")
non.participants <- non.participants$CalorieIntakeForNon.participants
max.len = max(length(participants), length(non.participants))
participants = c(participants, rep(NA, max.len - length(participants)))
non.participants = c(non.participants, rep(NA, max.len - length(non.participants)))
df <- data.frame(participants, non.participants)
names(df) <- c("participants", "non.participants")
participants <- df$participants[!is.na(df$participants)]
boundaries <- seq(min(participants)-10, max(participants)+10, by=20)
h <- hist(participants, breaks=boundaries, plot=FALSE)
plot(
h,
xaxt = "n",
xlab = "calorie intake",
ylab = "frequency",
main = "calorie intake for participants",
col = "cadetblue"
)
axis(1, h$mids, labels=seq(floor(min(participants)), ceiling(max(participants)), by=20), tick=FALSE, padj=-1.5)
df <- data.frame(participants, non.participants)
summary(dfnon.$participants)
# Question 1
setwd("/Users/anthony.valencia/met/cs555/assignments/02/")
participants <- read.csv("participants")
participants <- participants$CalorieIntakeForparticipants
non.participants <- read.csv("non-participants")
non.participants <- non.participants$CalorieIntakeForNon.participants
max.len = max(length(participants), length(non.participants))
participants = c(participants, rep(NA, max.len - length(participants)))
non.participants = c(non.participants, rep(NA, max.len - length(non.participants)))
df <- data.frame(participants, non.participants)
names(df) <- c("participants", "non.participants")
df
# Question 1
setwd("/Users/anthony.valencia/met/cs555/assignments/02/")
participants <- read.csv("participants")
participants <- participants$CalorieIntakeForparticipants
non.participants <- read.csv("non-participants")
non.participants <- non.participants$CalorieIntakeForNon.participants
max.len = max(length(participants), length(non.participants))
participants = c(participants, rep(NA, max.len - length(participants)))
non.participants = c(non.participants, rep(NA, max.len - length(non.participants)))
df <- data.frame(participants, non.participants)
names(df) <- c("participants", "non.participants")
df
summary(df$participants)
summary(df$non.$participants)
participants <- df$participants[!is.na(df$participants)]
boundaries <- seq(min(participants)-10, max(participants)+10, by=20)
h <- hist(participants, breaks=boundaries, plot=FALSE)
plot(
h,
xaxt = "n",
xlab = "calorie intake",
ylab = "frequency",
main = "calorie intake for participants",
col = "cadetblue"
)
axis(1, h$mids, labels=seq(floor(min(participants)), ceiling(max(participants)), by=20), tick=FALSE, padj=-1.5)
non.participants <- df$non.participants[!is.na(df$non.participants)]
boundaries <- seq(min(non.participants)-10, max(non.participants)+10, by=20)
h <- hist(non.participants, breaks=boundaries, plot=FALSE)
plot(
h,
xaxt = "n",
xlab = "calorie intake",
ylab = "frequency",
main = "calorie intake for non-participants",
col = "cadetblue"
)
axis(1, h$mids, labels=seq(floor(min(non.participants)), ceiling(max(non.participants)), by=20), tick=FALSE, padj=-1.5)
# Q4 Formally test whether or not participants consumed more calories than non-participants at the alpha=0.05 level using
#     the 5 steps outlined in the module.
sample.mean.non.participants <- mean(non.participants)
sample.sd.non.participants <- sd(non.participants)
n.non.participants <- length(non.participants)
s.non.participants.sqd <- sample.sd.non.participants^2
s.participants.sqd <- sample.sd.participants^2
t <- (sample.mean.participants - sample.mean.non.participants)/(sqrt((s.participants.sqd/n.participants) + (s.non.participants.sqd/n.non.participants)))
# t = 2.824836
# critical value for df = 25 - 1 = 24 and p = 0.05 is 1.711
# t = 2.824836 >= 1.711, so we reject H0 (participants consumed more calories than non-participants)
